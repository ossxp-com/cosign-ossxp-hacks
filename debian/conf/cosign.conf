## [为 cgi 和 cosignd 共用]
# TLS 参数
set cosigncadir /opt/cosign/conf/certs/CA/
# cosignd 的证书可以通过 /etc/default/cosignd 中的参数设置，覆盖这里的设置
# 因此下面的证书设置仅供 CGI 使用
set cosigncert  /opt/cosign/conf/certs/foo.bar/cgi-1.pem
set cosignkey   /opt/cosign/conf/certs/foo.bar/cgi-1.key


## [cosignd-专用参数]
# 允许以 cgi 权限来访问 cosignd （注册新的 sessions）
# 要和 cgi 证书中的 CN 一致
# 注： cgi 只有一个参数，不像 service 可以有两个参数！
cgi cgi-1

# 允许以 service 级别权限来访问 cosignd （检查已经存在的 sessions）
# 和 mod_cosign 的证书中 CN 一致 （本例不匹配源 IP 或者域名）
service filter-1 0
service filter-2 0

# 在 ldapadmin 示例中，我们在 Apache 级别限制访问服务 (CosignRequireFactor admin)
# 我们也可以在 cosignd 级别进行集中控制：
#cookie ldapadmin reauth ldap admin
# 注意：您可以定义多个 factors。
# 缺省的，一个 cookie is granted as long as one factor is enabled.


## [cgi-专用参数]
# cosignd 主机（必须和服务器的 CN 匹配）
set cosignhost cosignd.foo.bar

# Grab this user's factor:
# - 至少需要一个 factor，认证才能成功
# - 第 3 个及其之后的参数，是来自模板 <FORM>/POST 的字段名称
# - 一个 可执行 factor 只返回一个 factor 名称
# - factor 名称可以被 mod_cosign 使用 （CosignRequireFactor）
# - "-2" 含义是本脚本只在其他的成功才执行
#factor /opt/cosign/factor/test login password
factor /opt/cosign/factor/ldap login password
#factor /opt/cosign/factor/admin -2 login

# 重新定义 template 目录，
# 这样我们自定义模板不会因为系统重装而被覆盖。
set cosigntmpldir /opt/cosign/lib/templates-local

# 成功 logout 后，重定向到的页面 ( logout_url?redirect_url 则定向到 redirect_url )
set cosignlogouturl https://weblogin.foo.bar/cgi-bin/login
# CGI 发现死循环时，重定向页
set cosignloopurl   https://weblogin.foo.bar/cosign/looping.html

