From: Jiang Xin <worldhello.net@gmail.com>
Subject: [PATCH] t/multi_language

<patch description>

Signed-off-by: Jiang Xin <worldhello.net@gmail.com>

---
 cgi/Makefile.in |    2 +-
 cgi/lang.c      |  118 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 cgi/lang.h      |   17 ++++++++
 3 files changed, 136 insertions(+), 1 deletions(-)

diff --git a/cgi/Makefile.in b/cgi/Makefile.in
index e867410..d8baf0b 100755
--- a/cgi/Makefile.in
+++ b/cgi/Makefile.in
@@ -29,7 +29,7 @@ INSTALL=     @INSTALL@
 CFLAGS=      ${DEFS} ${OPTOPTS} @CFLAGS@ ${INCPATH}
 
 
-OBJ     = network.o subfile.o ../common/mkcookie.o ../common/fbase64.o \
+OBJ     = network.o subfile.o lang.o ../common/mkcookie.o ../common/fbase64.o \
 	../common/conf.o ../common/wildcard.o ../common/argcargv.o \
 	../version.o 
 TARGETS = logout cosign.cgi
diff --git a/cgi/lang.c b/cgi/lang.c
new file mode 100644
index 0000000..ed863d6
--- /dev/null
+++ b/cgi/lang.c
@@ -0,0 +1,118 @@
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include <ctype.h>
+
+#include "lang.h"
+
+    char **
+get_accept_language()
+{
+    static char **accept_languages = NULL;
+    char *p, *pnext, *buff;
+    char **lang;
+    int found = 0;
+    int i,j,k,m;
+    int array_size=8;
+
+    if (accept_languages != NULL)
+	return accept_languages;
+
+    lang = calloc(sizeof(char*),array_size+1);
+    for (i=0; i<array_size; i++)
+	lang[i]=NULL;
+
+    p = getenv( "HTTP_ACCEPT_LANGUAGE" );
+
+    if (p != NULL)
+    {
+	while(1)
+	{
+	    int i=0;
+	    while (1)
+	    {
+		char c = *(p+i);
+		if ( c=='\0' || c== ';' || c==',')
+		    break;
+		i++;
+	    }
+	    if (i>0)
+		buff = strndup(p,i);
+	    else
+		buff = NULL;
+
+	    if (buff!=NULL)
+	    {
+		for (j=0,k=0; j < strlen(buff); j++)
+		{
+		    if ( *(buff+j) == '-' || *(buff+j) == '_')
+		    {
+			*(buff+j) = '_';
+			k = 1;
+			continue;
+		    }
+		    if (k==0)
+			*(buff+j) = tolower(*(buff+j));
+		    else
+			*(buff+j) = toupper(*(buff+j));
+
+		}
+
+		if (strcmp(buff, "zh_SG")==0)
+		{
+		    free(buff);
+		    buff = strdup("zh_CN");
+		}
+		else if (strcmp(buff, "zh_HK")==0)
+		{
+		    free(buff);
+		    buff = strdup("zh_TW");
+		}
+		found = 0;
+		for (m=0; m< array_size; m++)
+		{
+		    if (lang[m]!=NULL && buff !=NULL && strcmp(lang[m],buff)==0)
+		    {
+			found = 1;
+			break;
+		    }
+		    else if (lang[m] == NULL)
+		    {
+			break;
+		    }
+		}
+		if (!found)
+		{
+		    if (m==array_size)
+		    {
+			array_size = array_size * 2 + 1;
+			lang = realloc(lang, array_size * sizeof(char *));
+		    }
+		    lang[m] = buff;
+		    lang[m+1] = NULL;
+		}
+	    }
+
+	    pnext = strchr(p, ',');
+	    if (pnext)
+		p = pnext+1;
+	    else
+		break;
+	}
+    }
+
+    /*
+    // Debug: print to stderr will be logged in apache log file.
+    for(i=0; i< array_size; i++)
+    {
+	if (lang[i] == NULL)
+	    break;
+	fprintf(stderr, "lang[%d] = %s\n", i, lang[i]);
+    }
+    */
+
+    return accept_languages = lang;
+}
+
+
+// vim: noet ts=8 sw=4
diff --git a/cgi/lang.h b/cgi/lang.h
new file mode 100644
index 0000000..3b32a78
--- /dev/null
+++ b/cgi/lang.h
@@ -0,0 +1,17 @@
+/*
+ * Copyright (c) 2008 JiangXin, worldhello.net AT gmail.com
+ * All Rights Reserved.  See LICENSE.
+ */
+
+#ifndef _LANG_H
+#define _LANG_H
+
+#include <locale.h>
+#include <libintl.h>
+#define _(String) gettext (String)
+#define gettext_noop(String) String
+#define N_(String) gettext_noop (String)
+
+char ** get_accept_language();
+
+#endif
-- 
tg: (d1adc40..) t/multi_language (depends on: master)
