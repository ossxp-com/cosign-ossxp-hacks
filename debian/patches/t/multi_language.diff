From: Jiang Xin <worldhello.net@gmail.com>
Subject: [PATCH] t/multi_language

<patch description>

Signed-off-by: Jiang Xin <worldhello.net@gmail.com>

---
 cgi/Makefile.in |    2 +-
 cgi/lang.c      |   92 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 cgi/lang.h      |   11 ++++++
 3 files changed, 104 insertions(+), 1 deletions(-)

diff --git a/cgi/Makefile.in b/cgi/Makefile.in
index e867410..d8baf0b 100755
--- a/cgi/Makefile.in
+++ b/cgi/Makefile.in
@@ -29,7 +29,7 @@ INSTALL=     @INSTALL@
 CFLAGS=      ${DEFS} ${OPTOPTS} @CFLAGS@ ${INCPATH}
 
 
-OBJ     = network.o subfile.o ../common/mkcookie.o ../common/fbase64.o \
+OBJ     = network.o subfile.o lang.o ../common/mkcookie.o ../common/fbase64.o \
 	../common/conf.o ../common/wildcard.o ../common/argcargv.o \
 	../version.o 
 TARGETS = logout cosign.cgi
diff --git a/cgi/lang.c b/cgi/lang.c
new file mode 100644
index 0000000..33c8939
--- /dev/null
+++ b/cgi/lang.c
@@ -0,0 +1,92 @@
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+#include "lang.h"
+
+char **
+get_accept_language()
+{
+    char *accept_language=NULL;
+    char *p, *pnext, *buff;
+    char **lang;
+    int found = 0;
+    int i;
+    int _INIT_SIZE=3;
+
+    lang = calloc(sizeof(char*),_INIT_SIZE+1);
+    for (i=0; i<_INIT_SIZE; i++)
+        lang[i]=NULL;
+
+    accept_language = getenv( "HTTP_ACCEPT_LANGUAGE" );
+    p = accept_language;
+
+    if (p != NULL)
+    {
+        while(1)
+        {
+            int i=0;
+            while (1)
+            {
+                char c = *(p+i);
+                if ( c=='\0' || c== ';' || c==',')
+                    break;
+                i++;
+            }
+            if (i>0)
+                buff = strndup(p,i);
+            else
+                buff = NULL;
+
+            if (buff!=NULL)
+            {
+                if (strcmp(buff, "zh-cn")==0 || strcmp(buff, "zh_cn")==0)
+                {
+                    free(buff);
+                    buff = strdup("zh");
+                }
+                else if (strncmp(buff, "en", 2)==0)
+                {
+                    free(buff);
+                    buff = strdup("en");
+                }
+                found = 0;
+                for (i=0; i< _INIT_SIZE; i++)
+                {
+                    if (lang[i]!=NULL && buff !=NULL && strcmp(lang[i],buff)==0)
+                    {
+                        found = 1;
+                        break;
+                    }
+                    else if (lang[i] == NULL)
+                    {
+                        break;
+                    }
+                }
+                if (!found)
+                {
+                    if (i==_INIT_SIZE)
+                    {
+                        _INIT_SIZE = _INIT_SIZE * 2 + 1;
+                        lang = realloc(lang, _INIT_SIZE * sizeof(char *));
+                    }
+                    lang[i] = buff;
+                    lang[i+1] = NULL;
+                }
+            }
+
+            pnext = strchr(p, ',');
+            if (pnext)
+                p = pnext+1;
+            else
+                break;
+        }
+    }
+    /*
+    for(i=0; i< _INIT_SIZE; i++)
+    {
+        fprintf(stderr, "lang[%d] = %s\n", i, lang[i]);
+    }
+    */
+    return lang;
+}
diff --git a/cgi/lang.h b/cgi/lang.h
new file mode 100644
index 0000000..36b37dc
--- /dev/null
+++ b/cgi/lang.h
@@ -0,0 +1,11 @@
+/*
+ * Copyright (c) 2008 JiangXin, worldhello.net AT gmail.com
+ * All Rights Reserved.  See LICENSE.
+ */
+
+#ifndef _LANG_H
+#define _LANG_H
+
+char ** get_accept_language();
+
+#endif
-- 
tg: (d1adc40..) t/multi_language (depends on: master)
