From: Jiang Xin <jiangxin@ossxp.com>
Subject: [PATCH] t/new_factor_with_flag_3

ossxp factor extension (flage -3):
* if has not logged in, not check factor with flag 3,
  but not warning like factor with flag 2.
* if require factor(s) not given, not run factor with flag 3.

Signed-off-by: Jiang Xin <jiangxin@ossxp.com>

---
 cgi/cgi.c     |  105 ++++++++++++++++++++++++++++++++++++++++++++-------------
 common/conf.c |    2 ++
 2 files changed, 84 insertions(+), 23 deletions(-)

diff --git a/cgi/cgi.c b/cgi/cgi.c
index f566083..d30188c 100755
--- a/cgi/cgi.c
+++ b/cgi/cgi.c
@@ -405,8 +405,9 @@ main( int argc, char *argv[] )
     char			new_scookie[ 255 ];
     char			*data, *ip_addr, *tmpl = NULL, *server_name;
     char			*cookie = NULL, *method, *qs;
-    char			*misc = NULL, *factor = NULL, *p, *r;
-    char			*require, *reqp;
+    char			*misc = NULL, *factor = NULL, *p, *r, *r2;
+    char			*require, *reqp, *reqp2;
+    char			*authed_factor, *authp;
     char			*ref = NULL, *service = NULL, *login = NULL;
     char			*remote_user = NULL;
     char			*subject_dn = NULL, *issuer_dn = NULL;
@@ -717,8 +718,15 @@ main( int argc, char *argv[] )
 	    require = strdup( factor );
 	    for ( r = strtok_r( require, ",", &reqp ); r != NULL;
 		    r = strtok_r( NULL, ",", &reqp )) {
-		for ( i = 0; ui.ui_factors[ i ] != NULL; i++ ) {
-		    if ( match_factor( r, ui.ui_factors[ i ], suffix )) {
+		require = strdup( r );
+		for ( r2 = strtok_r( require, "|", &reqp2 ); r2 != NULL;
+			r2 = strtok_r( NULL, ",", &reqp2 )) {
+		    for ( i = 0; ui.ui_factors[ i ] != NULL; i++ ) {
+			if ( match_factor( r2, ui.ui_factors[ i ], suffix )) {
+			    break;
+			}
+		    }
+		    if ( ui.ui_factors[ i ] != NULL ) {
 			break;
 		    }
 		}
@@ -944,7 +952,21 @@ loggedin:
 		    " before secondary authentication.");
 	    goto loginscreen;
 	}
+	/*
+	 * ossxp factor extension:
+	 *   * if has not logged in, not check factor with flag 3,
+	 *     but not warning like factor with flag 2.
+	 *   * if require factor(s) not given, not run factor with flag 3.
+	 */
+	if (( fl->fl_flag == 3 ) && ( *ui.ui_login == '\0' || factor == NULL )) {
+	    continue;
+	}
+
 	if (( rc = execfactor( fl, cl, &msg )) != COSIGN_CGI_OK ) {
+	    /* ossxp: bypass if auth failed for fl_flag == 3, and check required factors latter. */
+	    if ( fl->fl_flag == 3 ) {
+		continue;
+	    }
 	    sl[ SL_ERROR ].sl_data = _(msg);
 	    fprintf( stderr, "CoSign: user %s authentication failure from host [%s]. (factors)\n", login !=NULL ? login : "?", ip_addr);
 	    if ( msg != NULL && strlen( msg ) > 0 )
@@ -959,24 +981,19 @@ loggedin:
 	    goto loginscreen;
 	}
 
-	for ( i = 0; i < COSIGN_MAXFACTORS - 1; i++ ) {
-	    if ( new_factors[ i ] == NULL ) {
-		new_factors[ i ] = strdup( msg );
-		new_factors[ i + 1 ] = NULL;
-		break;
-	    }
-	    if ( strcmp( new_factors[ i ], msg ) == 0 ) {
-		break;
-	    }
-	}
-
-	/*
-	 * Don't call cosign_login() if the factor in question is
-	 * already satisfied.
-	 */
-	for ( i = 0; ui.ui_factors[ i ] != NULL; i++ ) {
-	    if ( strcmp( msg, ui.ui_factors[ i ] ) == 0 ) {
-		break;
+	/* ossxp: factor return a comma seperated authorized factors. */
+	authed_factor = strdup( msg );
+	for ( r = strtok_r( authed_factor, ",", &authp ); r != NULL;
+		r = strtok_r( NULL, ",", &authp )) {
+	    for ( i = 0; i < COSIGN_MAXFACTORS - 1; i++ ) {
+		if ( new_factors[ i ] == NULL ) {
+		    new_factors[ i ] = strdup( r );
+		    new_factors[ i + 1 ] = NULL;
+		    break;
+		}
+		if ( strcmp( new_factors[ i ], r ) == 0 ) {
+		    break;
+		}
 	    }
 	}
 
@@ -989,6 +1006,20 @@ loggedin:
 	    sl[ SL_LOGIN ].sl_data = login;
 	}
 
+	/* ossxp: register each factor from the comma seperated authorized factors. */
+	authed_factor = strdup( msg );
+	for ( r = strtok_r( authed_factor, ",", &authp ); r != NULL;
+		r = strtok_r( NULL, ",", &authp )) {
+	    /*
+	     * Don't call cosign_login() if the factor in question is
+	     * already satisfied.
+	     */
+	    for ( i = 0; ui.ui_factors[ i ] != NULL; i++ ) {
+		if ( strcmp( r, ui.ui_factors[ i ] ) == 0 ) {
+		    break;
+		}
+	    }
+	}
 	if (( ui.ui_factors[ i ] == NULL ) ||
 		( strcmp( ui.ui_ipaddr, ip_addr ) != 0 )) {
 	    if ( cosign_login( head, cookie, ip_addr, login, msg, NULL ) < 0 ) {
@@ -998,11 +1029,39 @@ loggedin:
 		subfile( ERROR_HTML, sl, SUBF_OPT_ERROR, 500 );
 		exit( 0 );
 	    }
-
 	    (void)cosign_check( head, cookie, &ui );
 	}
     }
 
+    /* ossxp: try to catch not required factors for factor with flag 3. */
+    if ( factor != NULL ) {
+	require = strdup( factor );
+	for ( r = strtok_r( require, ",", &reqp ); r != NULL;
+		r = strtok_r( NULL, ",", &reqp )) {
+	    require = strdup( r );
+	    for ( r2 = strtok_r( require, "|", &reqp2 ); r2 != NULL;
+		    r2 = strtok_r( NULL, ",", &reqp2 )) {
+		for ( i = 0; ui.ui_factors[ i ] != NULL; i++ ) {
+		    if ( match_factor( r2, ui.ui_factors[ i ], suffix )) {
+			break;
+		    }
+		}
+		if ( ui.ui_factors[ i ] != NULL ) {
+		    break;
+		}
+	    }
+	    if ( ui.ui_factors[ i ] == NULL ) {
+		break;
+	    }
+	}
+	if ( r != NULL ) {
+	    fprintf( stderr, "CoSign: user %s authentication failure from host [%s]. (factor: %s)\n", login !=NULL ? login : "?", ip_addr, r);
+	    sl[ SL_ERROR ].sl_data = _("Additional authentication"
+		    " failed. Please try again later.");
+	    goto loginscreen;
+	}
+    }
+
     if ( *ui.ui_login == '\0' ) {
 	sl[ SL_TITLE ].sl_data = _("Authentication Required");
 	sl[ SL_ERROR ].sl_data = _("Please enter your login and password.");
diff --git a/common/conf.c b/common/conf.c
index 547a7ae..ab314c1 100644
--- a/common/conf.c
+++ b/common/conf.c
@@ -671,6 +671,8 @@ read_config( char *path )
 	    for ( i = 2; *av[ i ] == '-'; i++ ) {
 		if ( strcmp( av[ i ], "-2" ) == 0 ) {
 		    fl_new->fl_flag = 2;
+		} else if ( strcmp( av[ i ], "-3" ) == 0 ) {
+		    fl_new->fl_flag = 3;
 		} else {
 		    fprintf( stderr, "line %d:"
 			    " unknown flag %s to keyword factor\n",
-- 
tg: (0b32341..) t/new_factor_with_flag_3 (depends on: t/real_remote_user)
