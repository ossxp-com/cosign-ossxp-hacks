From: Jiang <jiangxin@ossxp.com>
Subject: [PATCH] t/static_htmls_to_templates

New cgi: info. Which use templates to show static htmls.

Signed-off-by: Jiang <jiangxin@ossxp.com>

---
 cgi/Makefile.in            |   13 +++-
 cgi/cgi.c                  |    4 +
 cgi/cosigncgi.h            |   11 +++
 cgi/info.c                 |  175 ++++++++++++++++++++++++++++++++++++++++++++
 cgi/login.c                |    6 ++
 cgi/logout.c               |    4 +
 cgi/subfile.c              |   22 ++++++
 html/Makefile.in           |    4 +-
 html/looping.html          |   14 ++--
 html/post_error.html       |   37 +++++++--
 html/validation_error.html |   54 ++++++++++++++
 11 files changed, 326 insertions(+), 18 deletions(-)

diff --git a/cgi/Makefile.in b/cgi/Makefile.in
index bef6995..245a649 100755
--- a/cgi/Makefile.in
+++ b/cgi/Makefile.in
@@ -34,7 +34,7 @@ CFLAGS=      ${DEFS} ${OPTOPTS} @CFLAGS@ ${INCPATH}
 OBJ     = network.o subfile.o lang.o ../common/mkcookie.o ../common/fbase64.o \
 	../common/conf.o ../common/wildcard.o ../common/argcargv.o \
 	../version.o 
-TARGETS = logout cosign.cgi
+TARGETS = logout cosign.cgi info
 
 all: ${TARGETS}
 
@@ -89,6 +89,16 @@ logout.o:	logout.c
 logout: logout.o $(OBJ)
 	${CC} ${CFLAGS} -o logout logout.o $(OBJ) $(LDFLAGS)
 
+info.o:	info.c
+	${CC} ${CFLAGS} \
+	-D_COSIGN_CONF=\"${COSIGNCONF}\" \
+	-D_COSIGN_TMPL_DIR=\"${COSIGNTMPLDIR}\" \
+	-D_LOCALEDIR=\"${LOCALEDIR}\" \
+	-c info.c
+
+info: info.o $(OBJ)
+	${CC} ${CFLAGS} -o info info.o $(filter-out network.o,$(OBJ)) $(LDFLAGS)
+
 clean:
 	/bin/rm -rf *.o ${TARGETS}
 
@@ -97,3 +107,4 @@ install : all
 	-mkdir -p $(DESTDIR)${CGIDIR};
 	${INSTALL} -m 0755 -c cosign.cgi $(DESTDIR)${CGIDIR}/;
 	${INSTALL} -m 0755 -c logout $(DESTDIR)${CGIDIR}/;
+	${INSTALL} -m 0755 -c info $(DESTDIR)${CGIDIR}/;
diff --git a/cgi/cgi.c b/cgi/cgi.c
index 0270944..a946c46 100755
--- a/cgi/cgi.c
+++ b/cgi/cgi.c
@@ -90,6 +90,8 @@ static struct subfile_list sl[] = {
         { 'f', SUBF_STR_ESC, NULL },
 #define SL_DFACTOR	6
         { 'd', SUBF_STR_ESC, NULL },
+#define SL_DETAIL	7
+        { 'm', SUBF_STR, NULL },
         { '\0', 0, NULL },
 };
 
@@ -288,6 +290,8 @@ main( int argc, char *argv[] )
 
     init_locale();
 
+    sl[ SL_DETAIL ].sl_data = SL_DEFAULT_ERROR_MESSAGE;
+
     if ( argc == 2 ) {
 	if ( strcmp( argv[ 1 ], "-V" ) == 0 ) {
 	    printf( "%s\n", cosign_version );
diff --git a/cgi/cosigncgi.h b/cgi/cosigncgi.h
index 2264fc9..f4bae00 100755
--- a/cgi/cosigncgi.h
+++ b/cgi/cosigncgi.h
@@ -31,3 +31,14 @@ struct connlist * connlist_setup( char *, unsigned short );
 #define REAUTH_HTML     	"reauth.html"
 #define REDIRECT_HTML		"redirect.html"
 #define VERIFY_LOGOUT		"verify-logout.html"
+
+#include "lang.h"
+#define	SL_DEFAULT_ERROR_MESSAGE    \
+	_("<p>Web Login is unavailable due to an internal error. We apologize" \
+	" for any inconvenience this may cause and are working to restore"   \
+	" service as soon as possible. Please try again later.</p>")
+
+//static html also treat as template. ( Jiang Xin <jiangxin@ossxp.com>)
+#define LOOPING_HTML          "looping.html"
+#define POST_ERROR_HTML       "post_error.html"
+#define VALIDATION_ERROR_HTML "validation_error.html"
diff --git a/cgi/info.c b/cgi/info.c
new file mode 100644
index 0000000..552ddcc
--- /dev/null
+++ b/cgi/info.c
@@ -0,0 +1,175 @@
+/*
+ * Copyright (c) 2002 Regents of The University of Michigan.
+ * All Rights Reserved.  See LICENSE.
+ */
+
+#include "config.h"
+
+#include <sys/types.h>
+#include <sys/param.h>
+#include <sys/time.h>
+#include <netinet/in.h>
+#include <openssl/ssl.h>
+#include <regex.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <snet.h>
+
+#include "cgi.h"
+#include "conf.h"
+#include "cosigncgi.h"
+#include "subfile.h"
+#include "lang.h"
+
+#include <locale.h>
+#include <libintl.h>
+#define _(String) gettext (String)
+#define gettext_noop(String) String
+#define N_(String) gettext_noop (String)
+
+extern char	*cosign_version;
+char		*tmpldir = _COSIGN_TMPL_DIR;
+char		*cosign_conf = _COSIGN_CONF;
+
+struct cgi_list cl[] = {
+#define CL_VERIFY	0
+        { "verify", CGI_TYPE_STRING, NULL },
+#define CL_URL 		1
+        { "url", CGI_TYPE_STRING, NULL },
+        { NULL, CGI_TYPE_UNDEF, NULL },
+};
+
+static struct subfile_list sl[] = {
+#define SL_LOGIN	0
+        { 'l', SUBF_STR_ESC, NULL },
+#define SL_TITLE	1
+        { 't', SUBF_STR, NULL },
+#define SL_ERROR	2
+        { 'e', SUBF_STR, NULL },
+#define SL_DETAIL	3
+        { 'm', SUBF_STR, NULL },
+        { '\0', 0, NULL },
+};
+
+
+    int
+main( int argc, char *argv[] )
+{
+    CGIHANDLE		*cgi;
+    char		*tmpl = ERROR_HTML;
+    char		*ip_addr, *qs;
+    char		*method = NULL;
+    char		*script;
+
+    init_locale();
+
+    sl[ SL_DETAIL ].sl_data = SL_DEFAULT_ERROR_MESSAGE;
+
+    if ( argc == 2 && ( strncmp( argv[ 1 ], "-V", 2 ) == 0 )) {
+	printf( "%s\n", cosign_version );
+	exit( 0 );
+    }
+
+    if ( cosign_config( cosign_conf ) < 0 ) {
+	fprintf( stderr, "Couldn't read %s\n", cosign_conf );
+	exit( 1 );
+    }
+    if ( chdir( tmpldir ) < 0 ) {
+	perror( tmpldir );
+	exit( 1 );
+    }
+
+    if (( ip_addr = getenv( "REMOTE_ADDR" )) == NULL ) {
+	sl[ SL_TITLE ].sl_data = _("Error: Server Error");
+	sl[ SL_ERROR ].sl_data = _("REMOTE_ADDR not set");
+	tmpl = ERROR_HTML;
+	subfile( tmpl, sl, 0 );
+	exit( 0 );
+    }
+
+    if (( script = getenv( "SCRIPT_NAME" )) == NULL ) {
+	sl[ SL_TITLE ].sl_data = _("Error: Server Error");
+	sl[ SL_ERROR ].sl_data = _("SCRIPT_NAME not set");
+	tmpl = ERROR_HTML;
+	subfile( tmpl, sl, 0 );
+	exit( 0 );
+    }
+
+    if (( method = getenv( "REQUEST_METHOD" )) == NULL ) {
+	sl[ SL_TITLE ].sl_data = _("Error: Server Error");
+	sl[ SL_ERROR ].sl_data = _("REQUEST_METHOD not set");
+	tmpl = ERROR_HTML;
+	subfile( tmpl, sl, 0 );
+	exit( 0 );
+    }
+
+    if ( strcmp( method, "GET" ) == 0 ) {
+	/* this is not a POST, display verify screen */
+	if ((( qs = getenv( "QUERY_STRING" )) == NULL ) || ( *qs == '\0' )) {
+	    qs = getenv( "PATH_INFO" );
+	    while ( qs != NULL && ( *qs == '/' )) {
+		qs++;
+	    }
+	}
+	if ( qs != NULL && ( *qs != '\0' )) {
+	    if (strncasecmp(qs, "looping", 4)==0) {
+		sl[ SL_TITLE ].sl_data = _("Your browser is looping!");
+		sl[ SL_DETAIL ].sl_data = _("<p>The Weblogin-protected site that "
+		    " you were connecting to encountered an error while"
+		    " processing your authentication. Please delete your"
+		    " cookies, restart your browser, and try again.</p>\n"
+		    " <p>Browser is stuck in an infinite redirect loop."
+		    " Possible reasons:</p>\n"
+		    " <ul>\n"
+		    " <li>Time of the server and your own pc are mismatch."
+		    " Which cause the cookie can not be saved by your browser."
+		    " Usually your clock is far ahead of time."
+		    " </li>\n"
+		    " <li>The URL you visit is not the canonical name for the"
+		    " service, and cookie register URL is not the same domain"
+		    " with the URL you visit, and this may cause service cookie"
+		    " not valid. </li>\n"
+		    " </ul>\n");
+		sl[ SL_ERROR ].sl_data = _("Browser is stuck in an infinite redirect loop.");
+		tmpl = LOOPING_HTML;
+	    } else if (strncasecmp(qs, "post_error", 4)==0) {
+		sl[ SL_TITLE ].sl_data = _("Changes Not Saved");
+		sl[ SL_ERROR ].sl_data = _("You were trying to POST, BUT Changes Not Saved");
+		sl[ SL_DETAIL ].sl_data = _("<p>You attempted to submit data"
+		    " to a Web Login-protected web site after your session"
+		    " had timed out. Your changes have not been saved.</p>\n"
+		    " <p>This can happen if your session has been idle for"
+		    " more than one hour or if you logged out (for example, "
+		    " in another browser window) before submitting the data."
+		    " </p>\n");
+		tmpl = POST_ERROR_HTML;
+	    } else if (strncasecmp(qs, "validation_error", 5)==0) {
+		sl[ SL_TITLE ].sl_data = _("weblogin: URL validation failed");
+		sl[ SL_ERROR ].sl_data = _("URL validation failed");
+		sl[ SL_DETAIL ].sl_data = _("<p>There is a problem with the"
+		    " URL to which you were redirected. Since this can"
+		    " potentially indicate phishing or other suspicious"
+		    " activity, we have stopped the redirect in order to"
+		    " protect your security.</p>\n"
+		    " <p>You may be able to access the web site or service"
+		    " if you try again with its official URL.</p>");
+		tmpl = VALIDATION_ERROR_HTML;
+	    } else {
+		sl[ SL_TITLE ].sl_data = _("Error: Server Error");
+		sl[ SL_ERROR ].sl_data = _("Unable to determine template from query string.");
+		tmpl = ERROR_HTML;
+	    }
+	    subfile ( tmpl, sl, 0 );
+	    exit( 0 );
+	}
+    }
+
+    tmpl = LOGIN_HTML;
+    sl[ SL_TITLE ].sl_data = _("Authentication Required");
+    subfile( tmpl, sl, 0 );
+    exit( 0 );
+}
+
+// vim: noet ts=8 sw=4
diff --git a/cgi/login.c b/cgi/login.c
index 05bc875..204c852 100644
--- a/cgi/login.c
+++ b/cgi/login.c
@@ -64,6 +64,8 @@ static struct subfile_list sl[] = {
         { 'e', SUBF_STR, NULL },
 #define SL_RFACTOR		5
         { 'f', SUBF_STR_ESC, NULL },
+#define SL_DETAIL	6
+        { 'm', SUBF_STR, NULL },
         { '\0', 0, NULL },
 };
 
@@ -137,6 +139,8 @@ cosign_login_mysql( struct connlist *head, char *cosignname, char *id,
 
     lcgi_configure();
 
+    sl[ SL_DETAIL ].sl_data = SL_DEFAULT_ERROR_MESSAGE;
+
     if ( !mysql_real_connect( &friend_db, friend_db_name, friend_login, friend_passwd, "friend", 3306, NULL, 0 )) {
 	fprintf( stderr, mysql_error( &friend_db ));
 	sl[ SL_ERROR ].sl_data = _("Unable to connect to guest account database.");
@@ -263,6 +267,8 @@ cosign_login_krb5( struct connlist *head, char *cosignname, char *id,
 
     lcgi_configure();
 
+    sl[ SL_DETAIL ].sl_data = SL_DEFAULT_ERROR_MESSAGE;
+
     if (( kerror = krb5_init_context( &kcontext ))) {
 	sl[ SL_ERROR ].sl_data = _( (char *)error_message( kerror ) );
 	sl[ SL_TITLE ].sl_data = _("Authentication Required ( kerberos error )");
diff --git a/cgi/logout.c b/cgi/logout.c
index a050442..de5e87f 100755
--- a/cgi/logout.c
+++ b/cgi/logout.c
@@ -41,6 +41,8 @@ struct cgi_list cl[] = {
         { "verify", CGI_TYPE_STRING, NULL },
 #define CL_URL 		1
         { "url", CGI_TYPE_STRING, NULL },
+#define SL_DETAIL	2
+        { 'm', SUBF_STR, NULL },
         { NULL, CGI_TYPE_UNDEF, NULL },
 };
 
@@ -135,6 +137,8 @@ main( int argc, char *argv[] )
 
     init_locale();
 
+    sl[ SL_DETAIL ].sl_data = SL_DEFAULT_ERROR_MESSAGE;
+
     if ( argc == 2 && ( strncmp( argv[ 1 ], "-V", 2 ) == 0 )) {
 	printf( "%s\n", cosign_version );
 	exit( 0 );
diff --git a/cgi/subfile.c b/cgi/subfile.c
index f36e72b..a35f903 100644
--- a/cgi/subfile.c
+++ b/cgi/subfile.c
@@ -322,6 +322,28 @@ subfile( char *filename, struct subfile_list *sl, int nocache )
         }
     }
 
+    // If template not exist, fallback to ERROR_HTML
+    if (access(filename, F_OK)!=0)
+    {
+	if ( strcmp(filename, LOGIN_ERROR_HTML) == 0 )
+	    return subfile( LOGIN_HTML, sl, nocache );
+
+	else if ( strcmp(filename, EXPIRED_ERROR_HTML) == 0 )
+	    return subfile( LOGIN_HTML, sl, nocache );
+
+	else if ( strcmp(filename, REDIRECT_HTML) == 0 )
+	    return subfile( ERROR_HTML, sl, nocache );
+
+	else if ( strcmp(filename, LOOPING_HTML) == 0 )
+	    return subfile( ERROR_HTML, sl, nocache );
+
+	else if ( strcmp(filename, POST_ERROR_HTML) == 0 )
+	    return subfile( ERROR_HTML, sl, nocache );
+
+	else if ( strcmp(filename, VALIDATION_ERROR_HTML) == 0 )
+	    return subfile( ERROR_HTML, sl, nocache );
+    }
+
     _subfile( filename, sl, nocache );
 
     return;
diff --git a/html/Makefile.in b/html/Makefile.in
index 8785b78..c0e6514 100755
--- a/html/Makefile.in
+++ b/html/Makefile.in
@@ -1,5 +1,7 @@
 TEMPLATES = error.html expired_error.html login.html login_error.html verify-logout.html reauth.html
-HTML = cosign_base.css cosign_js.css post_error.html looping.html
+## static html also serve as template (jiangxin@ossxp.com)
+TEMPLATES += post_error.html looping.html validation_error.html
+HTML = cosign_base.css cosign_js.css
 prefix=@prefix@
 exec_prefix=@exec_prefix@
 TMPLDIR  = @prefix@/templates
diff --git a/html/looping.html b/html/looping.html
index 808ac19..a667522 100755
--- a/html/looping.html
+++ b/html/looping.html
@@ -4,7 +4,7 @@
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
 <meta http-equiv="Pragma" content="no-cache" />
 <meta http-equiv="Expires" content="Monday, 16-Apr-73 13:10:00 GMT" />
-<title>Your browser is looping!</title>
+<title>$t</title>
 <style type="text/css" media="screen">
 /* <![CDATA[ */@import "/cosign/cosign_base.css"/**/;/* ]]> */
 
@@ -22,14 +22,12 @@
 	<div id="main">
 		<div id="uiRow">
 			<div id="leftUIcol">
-				<h1 class="error">Authentication Error</h1>
-				<p>The Web Login-protected site that you were connecting to encountered an error while
-					processing your authentication. Please delete your cookies, restart your browser,
-					and try again. If you need assistance, contact <a href="#">Technical Support (put
-					URL here)</a>.</p>
+				<h1 class="error">$t</h1>
+				<p>
+				$m
+				<p>Please contact <a href="#">Technical Support (put URL here)</a> if you have any questions.</p>
 				<p><a href="#">Put URL to main CoSign page here</a></p>
-				<p class="techInfo"><strong>Technical Info:</strong> Browser is stuck in an infinite
-					redirect loop.</p>
+				<p class="techInfo"><strong>Technical Info:</strong> $e</p>
 			</div>
 			<form action="#" method="post" name="factors" id="rightUIcol">
 				<div class="factorHead">
diff --git a/html/post_error.html b/html/post_error.html
index 071fa03..a667522 100755
--- a/html/post_error.html
+++ b/html/post_error.html
@@ -4,9 +4,14 @@
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
 <meta http-equiv="Pragma" content="no-cache" />
 <meta http-equiv="Expires" content="Monday, 16-Apr-73 13:10:00 GMT" />
-<title>You were trying to POST?</title>
+<title>$t</title>
 <style type="text/css" media="screen">
 /* <![CDATA[ */@import "/cosign/cosign_base.css"/**/;/* ]]> */
+
+#rightUIcol .factorHead h2 {
+	background: none;
+	color: #999;
+}
 </style>
 </head>
 <body>
@@ -16,13 +21,29 @@
 		</span> <strong>Our Home Page</strong></a> </div>
 	<div id="main">
 		<div id="uiRow">
-			<h1 class="error">Changes Not Saved</h1>
-			<p>You attempted to submit data to a Web Login-protected web site after your session
-				had timed out. Your changes have not been saved.</p>
-			<p>This can happen if your session has been idle for more than one hour or if you logged
-				out (for example, in another browser window) before submitting the data. Please contact <a href="#">Technical
-				Support (put URL here)</a> if you have any questions.</p>
-			<p><a href="#">Put URL to main CoSign page here</a></p>
+			<div id="leftUIcol">
+				<h1 class="error">$t</h1>
+				<p>
+				$m
+				<p>Please contact <a href="#">Technical Support (put URL here)</a> if you have any questions.</p>
+				<p><a href="#">Put URL to main CoSign page here</a></p>
+				<p class="techInfo"><strong>Technical Info:</strong> $e</p>
+			</div>
+			<form action="#" method="post" name="factors" id="rightUIcol">
+				<div class="factorHead">
+					<h2>ID &amp; Password</h2>
+				</div>
+				<div class="factorHead">
+					<h2>One Time Passcode</h2>
+				</div>
+				<div class="factorHead">
+					<h2>Certificate</h2>
+				</div>
+				<div id="loginButton">
+					<input type="submit" name="doLogin" value="Log In" disabled="disabled" />
+				</div>
+			</form>
+			<div class="clear">&nbsp;</div>
 		</div>
 		<div id="uiBottom">&nbsp;</div>
 	</div>
diff --git a/html/validation_error.html b/html/validation_error.html
new file mode 100755
index 0000000..a667522
--- /dev/null
+++ b/html/validation_error.html
@@ -0,0 +1,54 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
+<meta http-equiv="Pragma" content="no-cache" />
+<meta http-equiv="Expires" content="Monday, 16-Apr-73 13:10:00 GMT" />
+<title>$t</title>
+<style type="text/css" media="screen">
+/* <![CDATA[ */@import "/cosign/cosign_base.css"/**/;/* ]]> */
+
+#rightUIcol .factorHead h2 {
+	background: none;
+	color: #999;
+}
+</style>
+</head>
+<body>
+<div id="page">
+	<div id="head"> <a id="mast" href="#" title="Link to Homepage"><span>
+		<!--A small logo for when CSS is disabled goes here. <img src="#" alt="" width="16" height="16" />//-->
+		</span> <strong>Our Home Page</strong></a> </div>
+	<div id="main">
+		<div id="uiRow">
+			<div id="leftUIcol">
+				<h1 class="error">$t</h1>
+				<p>
+				$m
+				<p>Please contact <a href="#">Technical Support (put URL here)</a> if you have any questions.</p>
+				<p><a href="#">Put URL to main CoSign page here</a></p>
+				<p class="techInfo"><strong>Technical Info:</strong> $e</p>
+			</div>
+			<form action="#" method="post" name="factors" id="rightUIcol">
+				<div class="factorHead">
+					<h2>ID &amp; Password</h2>
+				</div>
+				<div class="factorHead">
+					<h2>One Time Passcode</h2>
+				</div>
+				<div class="factorHead">
+					<h2>Certificate</h2>
+				</div>
+				<div id="loginButton">
+					<input type="submit" name="doLogin" value="Log In" disabled="disabled" />
+				</div>
+			</form>
+			<div class="clear">&nbsp;</div>
+		</div>
+		<div id="uiBottom">&nbsp;</div>
+	</div>
+</div>
+<div id="foot">&copy; 2006 <a href="http://www.umich.edu/~regents/" title="Regents of the University of Michigan"> Regents
+		of the University of Michigan</a> </div>
+</body>
+</html>
-- 
tg: (a564edf..) t/static_htmls_to_templates (depends on: t/message_localize t/autotools_for_setup)
