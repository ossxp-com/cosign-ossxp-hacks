diff -r ca3d6558735f cgi/Makefile.in
--- a/cgi/Makefile.in	Wed Dec 10 15:28:16 2008 +0800
+++ b/cgi/Makefile.in	Wed Dec 10 15:30:32 2008 +0800
@@ -29,7 +29,7 @@
 CFLAGS=      ${DEFS} ${OPTOPTS} @CFLAGS@ ${INCPATH}
 
 
-OBJ     = network.o subfile.o ../common/mkcookie.o ../common/fbase64.o \
+OBJ     = network.o subfile.o lang.o ../common/mkcookie.o ../common/fbase64.o \
 	../common/config.o ../common/wildcard.o ../common/argcargv.o \
 	../version.o 
 TARGETS = logout cosign.cgi
diff -r ca3d6558735f cgi/lang.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/cgi/lang.c	Wed Dec 10 15:30:32 2008 +0800
@@ -0,0 +1,90 @@
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+#include "lang.h"
+
+char **
+get_accept_language()
+{
+    char *accept_language=NULL;
+    char *p, *pnext, *buff;
+    char **lang;
+    int found = 0;
+    int i;
+    int _INIT_SIZE=3;
+
+    lang = calloc(sizeof(char*),_INIT_SIZE+1);
+    for (i=0; i<_INIT_SIZE; i++)
+        lang[i]=NULL;
+
+    accept_language = getenv( "HTTP_ACCEPT_LANGUAGE" );
+    p = accept_language;
+
+    if (p != NULL)
+    {
+        while(1)
+        {
+            int i=0;
+            while (1)
+            {
+                char c = *(p+i);
+                if ( c=='\0' || c== ';' || c==',')
+                    break;
+                i++;
+            }
+            if (i>0)
+                buff = strndup(p,i);
+            else
+                buff = NULL;
+
+            if (buff!=NULL)
+            {
+                if (strcmp(buff, "zh-cn")==0 || strcmp(buff, "zh_cn")==0)
+                {
+                    free(buff);
+                    buff = strdup("zh");
+                }
+                else if (strncmp(buff, "en", 2)==0)
+                {
+                    free(buff);
+                    buff = strdup("en");
+                }
+                found = 0;
+                for (i=0; i< _INIT_SIZE; i++)
+                {
+                    if (lang[i]!=NULL && buff !=NULL && strcmp(lang[i],buff)==0)
+                    {
+                        found = 1;
+                        break;
+                    }
+                    else if (lang[i] == NULL)
+                    {
+                        break;
+                    }
+                }
+                if (!found)
+                {
+                    if (i==_INIT_SIZE)
+                    {
+                        _INIT_SIZE = _INIT_SIZE * 2 + 1;
+                        lang = realloc(lang, _INIT_SIZE * sizeof(char *));
+                    }
+                    lang[i] = buff;
+                    lang[i+1] = NULL;
+                }
+            }
+
+            pnext = strchr(p, ',');
+            if (pnext)
+                p = pnext+1;
+            else
+                break;
+        }
+    }
+    for(i=0; i< _INIT_SIZE; i++)
+    {
+        fprintf(stderr, "lang[%d] = %s\n", i, lang[i]);
+    }
+    return lang;
+}
diff -r ca3d6558735f cgi/lang.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/cgi/lang.h	Wed Dec 10 15:30:32 2008 +0800
@@ -0,0 +1,11 @@
+/*
+ * Copyright (c) 2008 JiangXin, worldhello.net AT gmail.com
+ * All Rights Reserved.  See LICENSE.
+ */
+
+#ifndef _LANG_H
+#define _LANG_H
+
+char ** get_accept_language();
+
+#endif
diff -r ca3d6558735f cgi/subfile.c
--- a/cgi/subfile.c	Wed Dec 10 15:28:16 2008 +0800
+++ b/cgi/subfile.c	Wed Dec 10 15:30:32 2008 +0800
@@ -3,6 +3,8 @@
 #include <string.h>
 
 #include "subfile.h"
+#include "lang.h"
+#include <unistd.h>
 
     void
 subfile( char *filename, struct subfile_list *sl, int nocache )
@@ -10,6 +12,34 @@
     FILE	*fs;
     int 	c, i, j;
     char	nasties[] = "<>(){}[]'`\" \\";
+
+    char    **lang;
+    char *filename_i18n;
+    int tmplen = 0;
+
+    tmplen = strlen(filename)+5;
+    filename_i18n = malloc(tmplen+1);
+    lang = get_accept_language();
+    while(*lang !=NULL)
+    {
+        if (strlen(*lang)+1+strlen(filename) > tmplen)
+        {
+            tmplen +=5;
+            filename_i18n=realloc(filename_i18n,tmplen+1);
+        }
+        snprintf(filename_i18n, tmplen, "%s/%s", *lang, filename);
+        fprintf(stderr, "filename: %s\n", filename_i18n);
+        if (access(filename_i18n, F_OK)==0)
+        {
+            filename = filename_i18n;
+            break;
+        }
+        else if (strcmp(*lang, "en")==0)
+        {
+            break;
+        }
+        lang++;
+    }
 
     if ( nocache ) {
 	fputs( "Expires: Mon, 16 Apr 1973 13:10:00 GMT\n"
